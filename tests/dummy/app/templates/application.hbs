<div class="container">
  <div class="centered">
    <div class="content">
      <header>
        <h1 id="title">Ember Inline Component Strings</h1>
      </header>
      <nav>
        {{scroll-to href="#about" classNames="button button-outline" label="About"}}
        {{scroll-to href="#usage" classNames="button button-outline" label="Usage"}}
        {{scroll-to href="#examples" classNames="button button-outline" label="Examples"}}
        {{scroll-to href="#contributing" classNames="button button-outline" label="Contributing & Other"}}
      </nav>
      <section>
        ⚠️&nbsp;<strong>This is currently an in-development addon, and may not be actively maintained. Use with care.</strong>
      </section>
      <article>
        <header id="about">
          <h2>About</h2>
        </header>
        <p>
          This addon is a simple addon made to wrap components around delimited parts of long strings. This is
          particularly useful for translations with actions and inline links.
        </p>
        <p>
          If you find yourself breaking up translations on either side of a link, and want to maintain the full context
          for your translators, this might be the addon for you.
        </p>
      </article>
      <article id="usage">
        <header>
          <h2>Usage</h2>
        </header>
        <p>
          You can wrap a component around a part of a string by passing the full string as a positional parameter.
        </p>
        {{code-snippet name="usage-basic.hbs"}}
        <p>
          The string must contain a delimited section, <code>{|component:text-to-wrap|}</code>, where component matches
          an attr of that name, and where text is the text that should be wrapped.
        </p>
        <p>
          So if the delimited part of the string is <code>{|foo:hello|}</code> then your should pass
          <code>foo=component</code> which will be wrapped (with yielding) around the word <code>hello</code>.
        </p>
        <p>
          Any component passed in should use <code>\{{yield}}</code> to emit the token where required. The component can
          be passed as a component or a string.
        </p>
      </article>

      <article id="examples">
        <header>
          <h2>Examples</h2>
        </header>
        <nav>
          <ul>
            <li>{{scroll-to href='#example-wrapping' label="Wrapping part of a string with a link"}}</li>
            <li>{{scroll-to href='#example-wrapping-component-string' label="Wrapping using a component string"}}</li>
            <li>{{scroll-to href='#example-translated-wrapping' label="Wrapping part of a translated string with a link"}}</li>
          </ul>
        </nav>
        <section id="example-wrapping">
          <h3>Wrapping part of a string with a link</h3>
          {{code-snippet name="example-wrapping.hbs"}}
          <blockquote>
            {{partial "snippets/example-wrapping"}}
          </blockquote>
        </section>
        <section id="example-wrapping-component-string">
          <h3>Wrapping using a component string</h3>
          You can also use components in string form, but you won't be able to pass context. (eg. <code>href</code>)
          {{code-snippet name="example-wrapping-component-string.hbs"}}
          <blockquote>
            {{partial "snippets/example-wrapping-component-string"}}
          </blockquote>
        </section>
        <section id="example-translated-wrapping">
          <h3>Wrapping part of a translated string with a link</h3>
          <p>
            <strong>This example uses ember-i18n and ember-truth-helpers</strong>
          </p>
          <p>
            If you want to allow switching between translations, you can pass in the string wrapped with the translation
            helper, so long as the translations include the delimiters on the translated side.
            <br>
            <br>
            eg. <code>"Hello! Please follow {|link:this other|} link": "Bonjour! Veuillez suivre {|link:un autre|} lien"</code>
          </p>
          {{code-snippet name="example-translated-wrapping.hbs"}}
          <blockquote>
            {{partial "snippets/example-translated-wrapping"}}
          </blockquote>
        </section>
      </article>
      <article id="contributing">
        <header>
          <h2>Contributing & Other</h2>
        </header>
        <section>
          <p>
            See <a href="{{githubUrl}}" target="_blank">github</a>.
          </p>
        </section>
      </article>
    </div>
  </div>
</div>

<a href="{{githubUrl}}" class="github-corner" aria-label="View source on Github"><svg width="80" height="80"
    viewBox="0 0 250 250" style="fill:#E04E39; color:#fff; position: fixed; top: 0; border: 0; right: 0;"
    aria-hidden="true"><path d="M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z"></path><path d="M128.3,109.0
    C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9
    125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2" fill="currentColor" style="transform-origin: 130px
    106px;" class="octo-arm"></path><path d="M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2
    139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6
    171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6
    C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5
    C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9
    141.8,141.8 Z" fill="currentColor" class="octo-body"></path></svg></a><style>.github-corner:hover
.octo-arm{animation:octocat-wave 560ms ease-in-out}@keyframes
octocat-wave{0%,100%{transform:rotate(0)}20%,60%{transform:rotate(-25deg)}40%,80%{transform:rotate(10deg)}}@media
(max-width:500px){.github-corner:hover .octo-arm{animation:none}.github-corner .octo-arm{animation:octocat-wave 560ms
    ease-in-out}}</style>
